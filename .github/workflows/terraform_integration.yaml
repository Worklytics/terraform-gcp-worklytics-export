on:
  pull_request:
  push:
    branches:
      - main
      - 'rc-*'

jobs:
  tf_integration:
    name: 'Terraform integration (on tf ${{ matrix.terraform_version }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform_version: [ '~1.6.0', '~1.7.0', '~1.8.0', '~1.9.0', 'latest' ] # haven't seen < 1.4 in the wild, so limit for sanity
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      WORKFLOW: 'integration'
      CI_SA_EMAIL: gh-actions-tf-gcp-export@worklytics-corp.iam.gserviceaccount.com
      GCP_IDENTITY_POOL: 'projects/432357880585/locations/global/workloadIdentityPools/github-actions/providers/github'
      EXAMPLE_TENANT_SA_EMAIL: w8s-export-tf-ci-tenant@worklytics-ci.iam.gserviceaccount.com
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BUCKET_NAME: terraform-gcp-worklytics-export-ci
    steps:

      - name: Check out code
        uses: actions/checkout@v4

      - name: 'setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - id: 'auth-gcp'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_IDENTITY_POOL }}
          service_account: ${{ env.CI_SA_EMAIL }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 483.0.0'

      - name: 'Terraform - integration test examples/basic apply'
        id: terraform_apply
        working-directory: examples/basic
        run: |
          echo "ci_run=${{ env.WORKLFLOW }}_$(echo -n "${{ matrix.terraform_version }}_${{ env.timestamp}}" | sha1sum | cut -c1-12)" >> $GITHUB_OUTPUT
          terraform init
          terraform apply -auto-approve \
            -var="bucket_name=${{ env.BUCKET_NAME }}" \
            -var="worklytics_tenant_sa_email=${{ env.EXAMPLE_TENANT_SA_EMAIL }}"

      - name: 'Terraform - integration test examples/basic gcs write'
        run: |
          DATE=
          ./test/rsync.sh ${{ env.EXAMPLE_TENANT_SA_EMAIL }} ${{ env.BUCKET_NAME }} ${{ steps.terraform_apply.outputs.ci_run }}

      - name: 'Terraform - integration test examples/basic terraform destroy'
        if: always() # try to force this to ALWAYS happen, no matter if previous stuff failed
        working-directory: examples/basic
        run: |
          gsutil -m rm -r gs://${{ env.BUCKET_NAME }}/${{ steps.terraform_apply.outputs.ci_run }}/*
          terraform destroy -auto-approve \
            -var="bucket_name=${{ env.BUCKET_NAME }}" \
            -var="worklytics_tenant_sa_email=${{ env.EXAMPLE_TENANT_SA_EMAIL }}"
